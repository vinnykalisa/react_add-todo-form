{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserById","userId","usersFromServer","find","newTodos","App","useState","users","setTodos","newTitle","setNewTitle","selectedUser","setSelectedUser","isTitleError","setIsTitleError","isUserError","setIsUserError","action","method","onSubmit","formEvent","preventDefault","isEmpty","todoProp","trim","newTodo","someTodos","maxId","Math","max","length","getMaxId","htmlFor","type","placeholder","value","onChange","changeEvent","target","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.947e4a9f.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ninterface Props {\n  user: User;\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\nimport './TodoInfo.scss';\n\ninterface Props {\n  todo: Todo;\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[];\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} />\n      ))}\n    </section>\n  );\n};\n","import { ChangeEvent, FormEvent, useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\nimport { TodoList } from './components/TodoList';\n\nexport function getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const newTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App = () => {\n  const [users] = useState(usersFromServer);\n  const [todos, setTodos] = useState(newTodos);\n  const [newTitle, setNewTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n  const [isTitleError, setIsTitleError] = useState(false);\n  const [isUserError, setIsUserError] = useState(false);\n\n  const handleTitleChange = (changeEvent: ChangeEvent<HTMLInputElement>) => {\n    if (isTitleError) {\n      setIsTitleError(true);\n    }\n\n    setIsTitleError(false);\n    setNewTitle(changeEvent.target.value);\n  };\n\n  const handleUserChange = (changeEvent: ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(+changeEvent.target.value);\n    setIsUserError(false);\n  };\n\n  const handleAddTodo = (formEvent: FormEvent<HTMLFormElement>) => {\n    formEvent.preventDefault();\n\n    const isEmpty = (todoProp: string) => todoProp.trim() === '';\n\n    if (isEmpty(newTitle)) {\n      setIsTitleError(true);\n    }\n\n    if (!selectedUser) {\n      setIsUserError(true);\n    }\n\n    if (isEmpty(newTitle) || !selectedUser) {\n      return;\n    }\n\n    const getMaxId = (someTodos: Todo[]) => {\n      const maxId = Math.max(...someTodos.map(todo => todo.id));\n\n      if (someTodos.length) {\n        return maxId + 1;\n      }\n\n      return 1;\n    };\n\n    const newTodo: Todo = {\n      id: getMaxId(todos),\n      title: newTitle,\n      userId: selectedUser,\n      completed: false,\n      user: getUserById(selectedUser),\n    };\n\n    setTodos(() => [...todos, newTodo]);\n\n    const clearForm = () => {\n      setNewTitle('');\n      setSelectedUser(0);\n    };\n\n    clearForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddTodo}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"title\">\n            <span>Title: </span>\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={newTitle}\n              onChange={handleTitleChange}\n            />\n          </label>\n\n          {isTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"user\">\n            <span>User: </span>\n            <select\n              data-cy=\"userSelect\"\n              onChange={handleUserChange}\n              value={selectedUser}\n            >\n              <option\n                value=\"0\"\n                disabled\n              >\n                Choose a user\n              </option>\n              {users.map(user => (\n                <option value={user.id} key={user.id}>\n                  {user.name}\n                </option>\n              ))}\n            </select>\n          </label>\n\n          {isUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}